{"version":3,"sources":["../node_modules/@material-ui/core/esm/Dialog/Dialog.js","redux/actions.js","components/RecipeUploadForm.js"],"names":["defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","props","ref","BackdropProps","children","classes","className","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","_extends","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onClick","event","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","withStyles","theme","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","name","nextId","useStyles","makeStyles","form","initialFormState","cookingTime","description","categories","ingredients","instructions","formReducer","state","action","type","payload","value","newArray","slice","splice","index","Error","useReducer","formState","formDispatch","useState","isSubmitted","setIsSubmitted","dialogOpen","setDialogOpen","dispatch","useDispatch","fileInput","createRef","handleChange","e","to","onSubmit","preventDefault","categoryArray","split","ingredientArray","instructionArray","console","log","files","dataUrl","reader","FileReader","readAsDataURL","onload","result","dataObj","dateUploaded","Date","image","saves","id","recipeId","accept","htmlFor","TextField","label","variant","onChange","required","helperText","multiline","rows","Button"],"mappings":"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","file":"static/js/7.21f03005.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onClick: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","let nextId = 4; //Already have four recipes in the memory as a sample\n\nexport const addRecipe = content => ({\n    type: \"ADD_RECIPE\",\n    payload: {\n        ...content,\n        id: ++nextId\n    }\n})\n\nexport const getId = () => {\n    return nextId;\n}","import React, { useReducer, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { Redirect } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { addRecipe, getId } from '../redux/actions';\n\nconst useStyles = makeStyles({\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n    }\n})\n\nconst initialFormState = {\n    name: '',\n    cookingTime: '',\n    description: '',\n    categories: '',\n    ingredients: '',\n    instructions: '',\n}\n\nfunction formReducer(state, action) {\n    switch (action.type) {\n        case \"INPUT\":\n            return {\n                ...state,\n                [action.payload.name]: action.payload.value\n            }\n        case \"DELETE\":\n            {\n                let newArray = state[action.payload.name].slice();\n                newArray.splice(action.payload.index, 1);\n                return {\n                    ...state,\n                    [action.payload.name]: newArray\n                }\n            }\n        default:\n            throw new Error(\"Invalid Action detected\")\n    }\n}\n\nexport default function () {\n    const classes = useStyles();\n    const [formState, formDispatch] = useReducer(formReducer, initialFormState);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const dispatch = useDispatch();\n    const fileInput = React.createRef();\n\n    const saveRecipe = e => {\n        e.preventDefault();\n        //Parsing for the categories\n        const categoryArray = formState.categories.split(\" \");\n        //Parsing for ingredients\n        const ingredientArray = formState.ingredients.split(\"\\n\");\n        // Parsing for method\n        const instructionArray = formState.instructions.split(\"\\n\")\n        console.log(fileInput.current.files[0]);\n        //Extract the image into an ImageUrl\n        let dataUrl = ''\n        const reader = new FileReader();\n        reader.readAsDataURL(fileInput.current.files[0]);\n        reader.onload = ((e) => {\n            //Add the url to the dataObject\n            dataUrl = reader.result;\n            const dataObj = {\n                name: formState.name,\n                dateUploaded: new Date(),\n                description: formState.description,\n                categories: categoryArray,\n                image: dataUrl,\n                cookingTime: formState.cookingTime,\n                ingredients: ingredientArray,\n                instructions: instructionArray,\n                saves: 0\n            }\n            dispatch(addRecipe(dataObj));\n            dispatch({ type: \"UPLOAD\", payload: { recipeId: getId() } });\n            setDialogOpen(true);\n        })\n    }\n\n    const handleChange = name => e => {\n        formDispatch({ type: \"INPUT\", payload: { name: name, value: e.target.value } })\n    }\n\n    const handleDialog = () => {\n        setDialogOpen(false);\n        setIsSubmitted(true);\n    }\n\n    return (isSubmitted ? <Redirect to=\"/\" /> : <>\n        <h2>Submit new recipe</h2>\n        <p>Enter the details of your new recipe here</p>\n        <form onSubmit={saveRecipe} className={classes.form}>\n            <input type='file' accept=\"image/*\" ref={fileInput} id=\"fileInput\" />\n            <label htmlFor=\"fileInput\">Upload a picture of the recipe</label>\n            <TextField\n                label='Recipe Name'\n                variant=\"outlined\"\n                value={formState.name}\n                onChange={handleChange(\"name\")}\n                required />\n            <TextField\n                label='Cooking time'\n                variant=\"outlined\"\n                value={formState.cookingTime}\n                onChange={handleChange(\"cookingTime\")}\n                required />\n            <TextField\n                label='Description'\n                variant=\"outlined\"\n                value={formState.description}\n                onChange={handleChange(\"description\")}\n                required />\n            <TextField\n                helperText=\"Enter each category followed by a space\"\n                label='Categories'\n                variant=\"outlined\"\n                value={formState.categories}\n                onChange={handleChange(\"categories\")}\n                required />\n            <TextField\n                helperText=\"Enter each ingredient followed by a new line\"\n                label='Ingredients Required'\n                variant=\"outlined\"\n                multiline rows={7}\n                value={formState.ingredients}\n                onChange={handleChange(\"ingredients\")}\n                required />\n            <TextField\n                helperText=\"Enter each instruction followed by a new line\"\n                label='Preparation Instructions'\n                variant=\"outlined\"\n                multiline rows={7}\n                value={formState.instructions}\n                onChange={handleChange(\"instructions\")}\n                required />\n            <Button type='submit'>Upload Recipe</Button>\n        </form>\n        <Dialog open={dialogOpen}>\n            Your recipe has been uploaded\n            <Button onClick={handleDialog}>Ok</Button>\n        </Dialog>\n    </>)\n}"],"sourceRoot":""}